<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net45;net46;net48;netcoreapp3.1;netstandard2.1;net5.0;net6.0;net7.0;net8.0</TargetFrameworks>
		<Platforms>AnyCPU</Platforms>
		<OutputType>Library</OutputType>
	</PropertyGroup>

	<PropertyGroup>
		<Title>ExtendedNumerics.BigComplex</Title>
		<Product>ExtendedNumerics.BigComplex</Product>
		<AssemblyName>ExtendedNumerics.BigComplex</AssemblyName>
		<AssemblyTitle>ExtendedNumerics.BigComplex</AssemblyTitle>
		<PackageId>ExtendedNumerics.BigComplex</PackageId>
		<Description>Arbitrary precision complex (imaginary) numbers.</Description>
		<Authors>Adam White</Authors>
		<Company>Adam White</Company>
		<Copyright>Made by Adam White</Copyright>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageTags>math mathematics biginteger complex-numbers arbitrary-precision numerics arithmetic numbers charp</PackageTags>
		<PackageProjectUrl>https://www.nuget.org/packages/ExtendedNumerics.BigComplex</PackageProjectUrl>
		<RepositoryUrl>https://github.com/AdamWhiteHat/BigComplex</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<PropertyGroup>
		<MajorVersion Condition=" '$(MajorVersion)' == '' ">3000</MajorVersion>
		<MinorVersion Condition=" '$(MinorVersion)' == '' ">0</MinorVersion>
		<PatchVersion Condition=" '$(PatchVersion)' == '' ">0</PatchVersion>

		<BuildTimestamp>$([System.DateTime]::Now.DayOfYear.ToString().PadLeft(3,'0'))</BuildTimestamp>

		<Version>$(MajorVersion).$(MinorVersion).$(PatchVersion)</Version>
		<AssemblyVersion>$(Version).$(BuildTimestamp)</AssemblyVersion>
		<PackageVersion>$(AssemblyVersion)</PackageVersion>
	</PropertyGroup>

	<ItemGroup>
	  <PackageReference Include="ExtendedNumerics.BigDecimal" Version="3000.0.1.312" />
	  <PackageReference Include="System.ValueTuple" Version="4.5.0" />
	</ItemGroup>

	<ItemGroup>
	  <None Include="..\README.md">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>

</Project>